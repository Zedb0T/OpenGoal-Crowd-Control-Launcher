import os
from pathlib import Path

appdata_dir = os.path.join(os.getenv("APPDATA"), "OpenGOAL-CrowdControl","")

class EnvFileUpdater:
    def __init__(self, env_file_path):
        self.env_file_path = env_file_path
    
    def update(self, variables, init_value):
        # Load environment variables from file
        with open(self.env_file_path, "r") as f:
            env_lines = f.readlines()

        # Get variable names from environment variables file
        existing_vars = set()
        for line in env_lines:
            line = line.strip()
            if not line or line.startswith("#"):
                continue
            var_name, _ = line.split("=", maxsplit=1)
            existing_vars.add(var_name)

        # Update environment variables with new variables
        with open(self.env_file_path, "a") as f:
            for variable in variables:
                if variable not in existing_vars:
                    value = ""
                    if init_value == "#t":
                        value = "t"
                    elif init_value == "#f":
                        value = "f"
                    elif isinstance(init_value, int):
                        value = str(init_value)
                    elif isinstance(init_value, str):
                        value = init_value
                    f.write(f"{variable}={value}\n")

class EnvFileChecker:
    def __init__(self, path):
        self.path = path

    def check_or_create(self):
        appdata_dir = os.getenv("APPDATA")
        appdata_dir = os.path.join(appdata_dir, "OpenGOAL-CrowdControl")
        Path(appdata_dir).mkdir(parents=True, exist_ok=True)
        env_file_path = os.path.join(appdata_dir, self.path)

        dir_path = os.path.dirname(env_file_path)
        os.makedirs(dir_path, exist_ok=True)

        if not os.path.isfile(env_file_path):
            with open(env_file_path, "w") as env_file:
                print("Created a new .env file at", env_file_path)
        else:
            print("Found an existing .env file at", env_file_path)




    def addENVtwitchSettings(self):
        #Add fields if they do not exist
        env_file_updater = EnvFileUpdater(appdata_dir + "env/twitch_settings.env")
        env_file_updater.update(["OAUTH"], "oauth:qxbi1u1zx1cdsasfnkldj69i7yo9okk")
        env_file_updater.update(["TARGET_CHANNEL"], "bikegamepro")
        env_file_updater.update(["PREFIX"], "#")
        env_file_updater.update(["CONNECT_MSG"], "Successfully connected to Channel! peepoHappy")
        env_file_updater.update(["PROTECT_SACRIFICE"], "#t")
        env_file_updater.update(["SACRIFICE_DURATION"], "300")

    def addENVcommandDurations(self):
    # Add fields if they do not exist
        env_file_updater = EnvFileUpdater(appdata_dir + "env/command_durations.env")
        env_file_updater.update(["ACTIVATE_MSG"], "t")
        env_file_updater.update(["protect_dur"], "60")
        env_file_updater.update(["rjto_dur"], "75")
        env_file_updater.update(["superjump_dur"], "60")
        env_file_updater.update(["superboosted_dur"], "180")
        env_file_updater.update(["noboosteds_dur"], "180")
        env_file_updater.update(["nojumps_dur"], "60")
        env_file_updater.update(["fastjak_dur"], "90")
        env_file_updater.update(["slowjak_dur"], "30")
        env_file_updater.update(["slippery_dur"], "75")
        env_file_updater.update(["pacifist_dur"], "60")
        env_file_updater.update(["shortfall_dur"], "60")
        env_file_updater.update(["ghostjak_dur"], "3")
        env_file_updater.update(["freecam_dur"], "6")
        env_file_updater.update(["noeco_dur"], "10")
        env_file_updater.update(["iframes_dur"], "60")
        env_file_updater.update(["rocketman_dur"], "5")
        env_file_updater.update(["invertcam_dur"], "120")
        env_file_updater.update(["stickycam_dur"], "25")
        env_file_updater.update(["cam_dur"], "60")
        env_file_updater.update(["dark_dur"], "30")
        env_file_updater.update(["nodax_dur"], "45")
        env_file_updater.update(["smallnet_dur"], "10")
        env_file_updater.update(["widefish_dur"], "4")
        env_file_updater.update(["lowpoly_dur"], "150")
        env_file_updater.update(["color_dur"], "90")
        env_file_updater.update(["scale_dur"], "30")
        env_file_updater.update(["widejak_dur"], "45")
        env_file_updater.update(["flatjak_dur"], "45")
        env_file_updater.update(["smalljak_dur"], "45")
        env_file_updater.update(["bigjak_dur"], "45")
        env_file_updater.update(["bighead_dur"], "45")
        env_file_updater.update(["smallhead_dur"], "45")
        env_file_updater.update(["bigfist_dur"], "45")
        env_file_updater.update(["bigheadnpc_dur"], "45")
        env_file_updater.update(["hugehead_dur"], "45")
        env_file_updater.update(["mirror_dur"], "45")
        env_file_updater.update(["notex_dur"], "45")
    
    def addENVcommandEnabled(self):
        #Add fields if they do not exist
        env_file_updater = EnvFileUpdater(appdata_dir + "env/command_enabled.env")
        env_file_updater.update(["DISABLED_MSG"], "t")
        env_file_updater.update(["protect"], "t")
        env_file_updater.update(["rjto"], "t")
        env_file_updater.update(["superjump"], "t")
        env_file_updater.update(["superboosted"], "t")
        env_file_updater.update(["noboosteds"], "t")
        env_file_updater.update(["nojumps"], "t")
        env_file_updater.update(["fastjak"], "t")
        env_file_updater.update(["slowjak"], "t")
        env_file_updater.update(["slippery"], "t")
        env_file_updater.update(["pacifist"], "t")
        env_file_updater.update(["trip"], "t")
        env_file_updater.update(["shortfall"], "t")
        env_file_updater.update(["ghostjak"], "t")
        env_file_updater.update(["getoff"], "t")
        env_file_updater.update(["unzoom"], "t")
        env_file_updater.update(["flutspeed"], "t")
        env_file_updater.update(["freecam"], "t")
        env_file_updater.update(["enemyspeed"], "t")
        env_file_updater.update(["give"], "f")
        env_file_updater.update(["collected"], "f")
        env_file_updater.update(["eco"], "t")
        env_file_updater.update(["sucksuck"], "t")
        env_file_updater.update(["noeco"], "t")
        env_file_updater.update(["die"], "t")
        env_file_updater.update(["topoint"], "f")
        env_file_updater.update(["randompoint"], "t")
        env_file_updater.update(["setpoint"], "t")
        env_file_updater.update(["tp"], "t")
        env_file_updater.update(["shift"], "t")
        env_file_updater.update(["rocketman"], "t")
        env_file_updater.update(["movetojak"], "t")
        env_file_updater.update(["ouch"], "t")
        env_file_updater.update(["burn"], "t")
        env_file_updater.update(["hp"], "t")
        env_file_updater.update(["melt"], "t")
        env_file_updater.update(["endlessfall"], "t")
        env_file_updater.update(["drown"], "t")
        env_file_updater.update(["iframes"], "t")
        env_file_updater.update(["invertcam"], "t")
        env_file_updater.update(["cam"], "t")
        env_file_updater.update(["stickycam"], "t")
        env_file_updater.update(["deload"], "t")
        env_file_updater.update(["quickcam"], "t")
        env_file_updater.update(["dark"], "t")
        env_file_updater.update(["nodax"], "t")
        env_file_updater.update(["smallnet"], "t")
        env_file_updater.update(["widefish"], "t")
        env_file_updater.update(["lowpoly"], "t")
        env_file_updater.update(["color"], "t")
        env_file_updater.update(["scale"], "t")
        env_file_updater.update(["widejak"], "t")
        env_file_updater.update(["flatjak"], "t")
        env_file_updater.update(["smalljak"], "t")
        env_file_updater.update(["bigjak"], "t")
        env_file_updater.update(["moveplantboss"], "t")
        env_file_updater.update(["moveplantboss2"], "t")
        env_file_updater.update(["basincell"], "t")
        env_file_updater.update(["resetactors"], "t")
        env_file_updater.update(["bighead"], "t")
        env_file_updater.update(["smallhead"], "t")
        env_file_updater.update(["bigfist"], "t")
        env_file_updater.update(["bigheadnpc"], "t")
        env_file_updater.update(["hugehead"], "t")
        env_file_updater.update(["mirror"], "t")
        env_file_updater.update(["notex"], "t")
        env_file_updater.update(["press"], "t")
        env_file_updater.update(["lang"], "t")
        env_file_updater.update(["repl"], "t")
        env_file_updater.update(["debug"], "t")
        env_file_updater.update(["save"], "t")
        env_file_updater.update(["actorson"], "t")
        env_file_updater.update(["actorsoff"], "t")
        env_file_updater.update(["fixoldsave"], "t")

    def addENVcommandCooldown(self):
        #Add fields if they do not exist
        env_file_updater = EnvFileUpdater(appdata_dir + "env/command_cooldowns.env")
        env_file_updater.update(["COOLDOWN_MSG"], "t")
        env_file_updater.update(["protect_cd"], "600")
        env_file_updater.update(["rjto_cd"], "120")
        env_file_updater.update(["superjump_cd"], "30")
        env_file_updater.update(["superboosted_cd"], "30")
        env_file_updater.update(["noboosteds_cd"], "180")
        env_file_updater.update(["nojumps_cd"], "420")
        env_file_updater.update(["fastjak_cd"], "120")
        env_file_updater.update(["slowjak_cd"], "240")
        env_file_updater.update(["slippery_cd"], "240")
        env_file_updater.update(["pacifist_cd"], "240")
        env_file_updater.update(["trip_cd"], "45")
        env_file_updater.update(["shortfall_cd"], "300")
        env_file_updater.update(["getoff_cd"], "210")
        env_file_updater.update(["unzoom_cd"], "60")
        env_file_updater.update(["flutspeed_cd"], "20")
        env_file_updater.update(["freecam_cd"], "300")
        env_file_updater.update(["enemyspeed_cd"], "20")
        env_file_updater.update(["give_cd"], "600")
        env_file_updater.update(["eco_cd"], "20")
        env_file_updater.update(["sucksuck_cd"], "30")
        env_file_updater.update(["noeco_cd"], "160")
        env_file_updater.update(["die_cd"], "300")
        env_file_updater.update(["topoint_cd"], "900")
        env_file_updater.update(["setpoint_cd"], "720")
        env_file_updater.update(["tp_cd"], "330")
        env_file_updater.update(["rocketman_cd"], "360")
        env_file_updater.update(["movetojak_cd"], "45")
        env_file_updater.update(["ouch_cd"], "210")
        env_file_updater.update(["hp_cd"], "75")
        env_file_updater.update(["iframes_cd"], "135")
        env_file_updater.update(["invertcam_cd"], "300")
        env_file_updater.update(["cam_cd"], "270")
        env_file_updater.update(["stickycam_cd"], "330")
        env_file_updater.update(["deload_cd"], "360")
        env_file_updater.update(["quickcam_cd"], "25")
        env_file_updater.update(["dark_cd"], "420")
        env_file_updater.update(["nodax_cd"], "20")
        env_file_updater.update(["smallnet_cd"], "45")
        env_file_updater.update(["widefish_cd"], "45")
        env_file_updater.update(["lowpoly_cd"], "30")
        env_file_updater.update(["color_cd"], "45")
        env_file_updater.update(["scale_cd"], "180")
        env_file_updater.update(["moveplantboss_cd"], "300")
        env_file_updater.update(["moveplantboss2_cd"], "5")
        env_file_updater.update(["basincell_cd"], "2")
        env_file_updater.update(["bighead_cd"], "180")
        env_file_updater.update(["smallhead_cd"], "180")
        env_file_updater.update(["bigfist_cd"], "180")
        env_file_updater.update(["bigheadnpc_cd"], "180")
        env_file_updater.update(["hugehead_cd"], "180")
        env_file_updater.update(["mirror_cd"], "180")
        env_file_updater.update(["notex_cd"], "180")
        env_file_updater.update(["press_cd"], "90")
        env_file_updater.update(["lang_cd"], "60")
        env_file_updater.update(["resetactors_cd"], "420")
        env_file_updater.update(["repl_cd"], "0")

    def addENVcommandUnused(self):
        #Add fields if they do not exist
        env_file_updater = EnvFileUpdater(appdata_dir + "env/unused.env")
        env_file_updater.update(["trip_dur"], "0")
        env_file_updater.update(["getoff_dur"], "0")
        env_file_updater.update(["flutspeed_dur"], "0")
        env_file_updater.update(["enemyspeed_dur"], "0")
        env_file_updater.update(["give_dur"], "0")
        env_file_updater.update(["collected_dur"], "0")
        env_file_updater.update(["eco_dur"], "0")
        env_file_updater.update(["sucksuck_dur"], "0")
        env_file_updater.update(["die_dur"], "0")
        env_file_updater.update(["topoint_dur"], "0")
        env_file_updater.update(["randompoint_dur"], "0")
        env_file_updater.update(["tp_dur"], "0")
        env_file_updater.update(["shift_dur"], "0")
        env_file_updater.update(["movetojak_dur"], "0")
        env_file_updater.update(["ouch_dur"], "0")
        env_file_updater.update(["burn_dur"], "0")
        env_file_updater.update(["hp_dur"], "0")
        env_file_updater.update(["melt_dur"], "0")
        env_file_updater.update(["endlessfall_dur"], "0")
        env_file_updater.update(["deload_dur"], "0")
        env_file_updater.update(["quickcam_dur"], "0")
        env_file_updater.update(["moveplantboss_dur"], "0")
        env_file_updater.update(["moveplantboss2_dur"], "0")
        env_file_updater.update(["basincell_dur"], "0")
        env_file_updater.update(["resetactors_dur"], "0")
        env_file_updater.update(["repl_dur"], "0")
        env_file_updater.update(["debug_dur"], "0")
        env_file_updater.update(["debug_cd"], "0")
        env_file_updater.update(["melt_cd"], "0")
        env_file_updater.update(["endlessfall_cd"], "0")
        env_file_updater.update(["burn_cd"], "0")
        env_file_updater.update(["shift_cd"], "0")
        env_file_updater.update(["randompoint_cd"], "0")
        env_file_updater.update(["collected_cd"], "0")
        env_file_updater.update(["ghostjak_cd"], "0")
        env_file_updater.update(["save_cd"], "0")
        env_file_updater.update(["save_dur"], "0")
        env_file_updater.update(["resetcooldowns_cd"], "0")
        env_file_updater.update(["resetcooldowns_dur"], "0")
        env_file_updater.update(["cd_dur"], "0")
        env_file_updater.update(["cd_cd"], "0")
        env_file_updater.update(["dur_dur"], "0")
        env_file_updater.update(["dur_cd"], "0")
        env_file_updater.update(["enable_cd"], "0")
        env_file_updater.update(["disable_cd"], "0")
        env_file_updater.update(["disable_dur"], "0")
        env_file_updater.update(["enable_dur"], "0")
        env_file_updater.update(["flatjak_cd"], "0")
        env_file_updater.update(["smalljak_cd"], "0")
        env_file_updater.update(["bigjak_cd"], "0")
        env_file_updater.update(["widejak_cd"], "0")
        env_file_updater.update(["actorson_cd"], "0")
        env_file_updater.update(["actorson_dur"], "0")
        env_file_updater.update(["actorsoff_cd"], "0")
        env_file_updater.update(["actorsoff_dur"], "0")
        env_file_updater.update(["unzoom_dur"], "0")
        env_file_updater.update(["drown_cd"], "0")
        env_file_updater.update(["drown_dur"], "0")
        env_file_updater.update(["press_dur"], "0")
        env_file_updater.update(["setpoint_dur"], "0")
        env_file_updater.update(["fixoldsave_dur"], "0")
        env_file_updater.update(["fixoldsave_cd"], "0")
        env_file_updater.update(["lang_dur"], "0")
        env_file_updater.update(["resetcooldowns"], "t")
        env_file_updater.update(["cd"], "t")
        env_file_updater.update(["dur"], "t")
        env_file_updater.update(["enable"], "t")
        env_file_updater.update(["disable"], "t")


